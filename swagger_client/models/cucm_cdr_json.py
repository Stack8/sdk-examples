# coding: utf-8

"""
    Helpdesk REST API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 6.8.1-SNAPSHOT
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six


class CucmCdrJson(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'pkid': 'str',
        'global_call_id_call_manager_id': 'int',
        'global_call_id_call_id': 'int',
        'global_call_id_cluster_id': 'str',
        'calling_device_name': 'str',
        'calling_device_description': 'str',
        'calling_device_owner_id': 'str',
        'calling_device_model': 'str',
        'calling_device_type_class_name': 'str',
        'calling_device_pool': 'str',
        'receiving_device_name': 'str',
        'receiving_device_description': 'str',
        'receiving_device_owner_id': 'str',
        'receiving_device_model': 'str',
        'receiving_device_type_class_name': 'str',
        'receiving_device_pool': 'str',
        'duration': 'int',
        'date_time_disconnect': 'int'
    }

    attribute_map = {
        'pkid': 'pkid',
        'global_call_id_call_manager_id': 'globalCallIdCallManagerId',
        'global_call_id_call_id': 'globalCallIdCallId',
        'global_call_id_cluster_id': 'globalCallIdClusterId',
        'calling_device_name': 'callingDeviceName',
        'calling_device_description': 'callingDeviceDescription',
        'calling_device_owner_id': 'callingDeviceOwnerId',
        'calling_device_model': 'callingDeviceModel',
        'calling_device_type_class_name': 'callingDeviceTypeClassName',
        'calling_device_pool': 'callingDevicePool',
        'receiving_device_name': 'receivingDeviceName',
        'receiving_device_description': 'receivingDeviceDescription',
        'receiving_device_owner_id': 'receivingDeviceOwnerId',
        'receiving_device_model': 'receivingDeviceModel',
        'receiving_device_type_class_name': 'receivingDeviceTypeClassName',
        'receiving_device_pool': 'receivingDevicePool',
        'duration': 'duration',
        'date_time_disconnect': 'dateTimeDisconnect'
    }

    def __init__(self, pkid=None, global_call_id_call_manager_id=None, global_call_id_call_id=None, global_call_id_cluster_id=None, calling_device_name=None, calling_device_description=None, calling_device_owner_id=None, calling_device_model=None, calling_device_type_class_name=None, calling_device_pool=None, receiving_device_name=None, receiving_device_description=None, receiving_device_owner_id=None, receiving_device_model=None, receiving_device_type_class_name=None, receiving_device_pool=None, duration=None, date_time_disconnect=None):  # noqa: E501
        """CucmCdrJson - a model defined in Swagger"""  # noqa: E501
        self._pkid = None
        self._global_call_id_call_manager_id = None
        self._global_call_id_call_id = None
        self._global_call_id_cluster_id = None
        self._calling_device_name = None
        self._calling_device_description = None
        self._calling_device_owner_id = None
        self._calling_device_model = None
        self._calling_device_type_class_name = None
        self._calling_device_pool = None
        self._receiving_device_name = None
        self._receiving_device_description = None
        self._receiving_device_owner_id = None
        self._receiving_device_model = None
        self._receiving_device_type_class_name = None
        self._receiving_device_pool = None
        self._duration = None
        self._date_time_disconnect = None
        self.discriminator = None
        if pkid is not None:
            self.pkid = pkid
        if global_call_id_call_manager_id is not None:
            self.global_call_id_call_manager_id = global_call_id_call_manager_id
        if global_call_id_call_id is not None:
            self.global_call_id_call_id = global_call_id_call_id
        if global_call_id_cluster_id is not None:
            self.global_call_id_cluster_id = global_call_id_cluster_id
        if calling_device_name is not None:
            self.calling_device_name = calling_device_name
        if calling_device_description is not None:
            self.calling_device_description = calling_device_description
        if calling_device_owner_id is not None:
            self.calling_device_owner_id = calling_device_owner_id
        if calling_device_model is not None:
            self.calling_device_model = calling_device_model
        if calling_device_type_class_name is not None:
            self.calling_device_type_class_name = calling_device_type_class_name
        if calling_device_pool is not None:
            self.calling_device_pool = calling_device_pool
        if receiving_device_name is not None:
            self.receiving_device_name = receiving_device_name
        if receiving_device_description is not None:
            self.receiving_device_description = receiving_device_description
        if receiving_device_owner_id is not None:
            self.receiving_device_owner_id = receiving_device_owner_id
        if receiving_device_model is not None:
            self.receiving_device_model = receiving_device_model
        if receiving_device_type_class_name is not None:
            self.receiving_device_type_class_name = receiving_device_type_class_name
        if receiving_device_pool is not None:
            self.receiving_device_pool = receiving_device_pool
        if duration is not None:
            self.duration = duration
        if date_time_disconnect is not None:
            self.date_time_disconnect = date_time_disconnect

    @property
    def pkid(self):
        """Gets the pkid of this CucmCdrJson.  # noqa: E501


        :return: The pkid of this CucmCdrJson.  # noqa: E501
        :rtype: str
        """
        return self._pkid

    @pkid.setter
    def pkid(self, pkid):
        """Sets the pkid of this CucmCdrJson.


        :param pkid: The pkid of this CucmCdrJson.  # noqa: E501
        :type: str
        """

        self._pkid = pkid

    @property
    def global_call_id_call_manager_id(self):
        """Gets the global_call_id_call_manager_id of this CucmCdrJson.  # noqa: E501


        :return: The global_call_id_call_manager_id of this CucmCdrJson.  # noqa: E501
        :rtype: int
        """
        return self._global_call_id_call_manager_id

    @global_call_id_call_manager_id.setter
    def global_call_id_call_manager_id(self, global_call_id_call_manager_id):
        """Sets the global_call_id_call_manager_id of this CucmCdrJson.


        :param global_call_id_call_manager_id: The global_call_id_call_manager_id of this CucmCdrJson.  # noqa: E501
        :type: int
        """

        self._global_call_id_call_manager_id = global_call_id_call_manager_id

    @property
    def global_call_id_call_id(self):
        """Gets the global_call_id_call_id of this CucmCdrJson.  # noqa: E501


        :return: The global_call_id_call_id of this CucmCdrJson.  # noqa: E501
        :rtype: int
        """
        return self._global_call_id_call_id

    @global_call_id_call_id.setter
    def global_call_id_call_id(self, global_call_id_call_id):
        """Sets the global_call_id_call_id of this CucmCdrJson.


        :param global_call_id_call_id: The global_call_id_call_id of this CucmCdrJson.  # noqa: E501
        :type: int
        """

        self._global_call_id_call_id = global_call_id_call_id

    @property
    def global_call_id_cluster_id(self):
        """Gets the global_call_id_cluster_id of this CucmCdrJson.  # noqa: E501


        :return: The global_call_id_cluster_id of this CucmCdrJson.  # noqa: E501
        :rtype: str
        """
        return self._global_call_id_cluster_id

    @global_call_id_cluster_id.setter
    def global_call_id_cluster_id(self, global_call_id_cluster_id):
        """Sets the global_call_id_cluster_id of this CucmCdrJson.


        :param global_call_id_cluster_id: The global_call_id_cluster_id of this CucmCdrJson.  # noqa: E501
        :type: str
        """

        self._global_call_id_cluster_id = global_call_id_cluster_id

    @property
    def calling_device_name(self):
        """Gets the calling_device_name of this CucmCdrJson.  # noqa: E501


        :return: The calling_device_name of this CucmCdrJson.  # noqa: E501
        :rtype: str
        """
        return self._calling_device_name

    @calling_device_name.setter
    def calling_device_name(self, calling_device_name):
        """Sets the calling_device_name of this CucmCdrJson.


        :param calling_device_name: The calling_device_name of this CucmCdrJson.  # noqa: E501
        :type: str
        """

        self._calling_device_name = calling_device_name

    @property
    def calling_device_description(self):
        """Gets the calling_device_description of this CucmCdrJson.  # noqa: E501


        :return: The calling_device_description of this CucmCdrJson.  # noqa: E501
        :rtype: str
        """
        return self._calling_device_description

    @calling_device_description.setter
    def calling_device_description(self, calling_device_description):
        """Sets the calling_device_description of this CucmCdrJson.


        :param calling_device_description: The calling_device_description of this CucmCdrJson.  # noqa: E501
        :type: str
        """

        self._calling_device_description = calling_device_description

    @property
    def calling_device_owner_id(self):
        """Gets the calling_device_owner_id of this CucmCdrJson.  # noqa: E501


        :return: The calling_device_owner_id of this CucmCdrJson.  # noqa: E501
        :rtype: str
        """
        return self._calling_device_owner_id

    @calling_device_owner_id.setter
    def calling_device_owner_id(self, calling_device_owner_id):
        """Sets the calling_device_owner_id of this CucmCdrJson.


        :param calling_device_owner_id: The calling_device_owner_id of this CucmCdrJson.  # noqa: E501
        :type: str
        """

        self._calling_device_owner_id = calling_device_owner_id

    @property
    def calling_device_model(self):
        """Gets the calling_device_model of this CucmCdrJson.  # noqa: E501


        :return: The calling_device_model of this CucmCdrJson.  # noqa: E501
        :rtype: str
        """
        return self._calling_device_model

    @calling_device_model.setter
    def calling_device_model(self, calling_device_model):
        """Sets the calling_device_model of this CucmCdrJson.


        :param calling_device_model: The calling_device_model of this CucmCdrJson.  # noqa: E501
        :type: str
        """

        self._calling_device_model = calling_device_model

    @property
    def calling_device_type_class_name(self):
        """Gets the calling_device_type_class_name of this CucmCdrJson.  # noqa: E501


        :return: The calling_device_type_class_name of this CucmCdrJson.  # noqa: E501
        :rtype: str
        """
        return self._calling_device_type_class_name

    @calling_device_type_class_name.setter
    def calling_device_type_class_name(self, calling_device_type_class_name):
        """Sets the calling_device_type_class_name of this CucmCdrJson.


        :param calling_device_type_class_name: The calling_device_type_class_name of this CucmCdrJson.  # noqa: E501
        :type: str
        """

        self._calling_device_type_class_name = calling_device_type_class_name

    @property
    def calling_device_pool(self):
        """Gets the calling_device_pool of this CucmCdrJson.  # noqa: E501


        :return: The calling_device_pool of this CucmCdrJson.  # noqa: E501
        :rtype: str
        """
        return self._calling_device_pool

    @calling_device_pool.setter
    def calling_device_pool(self, calling_device_pool):
        """Sets the calling_device_pool of this CucmCdrJson.


        :param calling_device_pool: The calling_device_pool of this CucmCdrJson.  # noqa: E501
        :type: str
        """

        self._calling_device_pool = calling_device_pool

    @property
    def receiving_device_name(self):
        """Gets the receiving_device_name of this CucmCdrJson.  # noqa: E501


        :return: The receiving_device_name of this CucmCdrJson.  # noqa: E501
        :rtype: str
        """
        return self._receiving_device_name

    @receiving_device_name.setter
    def receiving_device_name(self, receiving_device_name):
        """Sets the receiving_device_name of this CucmCdrJson.


        :param receiving_device_name: The receiving_device_name of this CucmCdrJson.  # noqa: E501
        :type: str
        """

        self._receiving_device_name = receiving_device_name

    @property
    def receiving_device_description(self):
        """Gets the receiving_device_description of this CucmCdrJson.  # noqa: E501


        :return: The receiving_device_description of this CucmCdrJson.  # noqa: E501
        :rtype: str
        """
        return self._receiving_device_description

    @receiving_device_description.setter
    def receiving_device_description(self, receiving_device_description):
        """Sets the receiving_device_description of this CucmCdrJson.


        :param receiving_device_description: The receiving_device_description of this CucmCdrJson.  # noqa: E501
        :type: str
        """

        self._receiving_device_description = receiving_device_description

    @property
    def receiving_device_owner_id(self):
        """Gets the receiving_device_owner_id of this CucmCdrJson.  # noqa: E501


        :return: The receiving_device_owner_id of this CucmCdrJson.  # noqa: E501
        :rtype: str
        """
        return self._receiving_device_owner_id

    @receiving_device_owner_id.setter
    def receiving_device_owner_id(self, receiving_device_owner_id):
        """Sets the receiving_device_owner_id of this CucmCdrJson.


        :param receiving_device_owner_id: The receiving_device_owner_id of this CucmCdrJson.  # noqa: E501
        :type: str
        """

        self._receiving_device_owner_id = receiving_device_owner_id

    @property
    def receiving_device_model(self):
        """Gets the receiving_device_model of this CucmCdrJson.  # noqa: E501


        :return: The receiving_device_model of this CucmCdrJson.  # noqa: E501
        :rtype: str
        """
        return self._receiving_device_model

    @receiving_device_model.setter
    def receiving_device_model(self, receiving_device_model):
        """Sets the receiving_device_model of this CucmCdrJson.


        :param receiving_device_model: The receiving_device_model of this CucmCdrJson.  # noqa: E501
        :type: str
        """

        self._receiving_device_model = receiving_device_model

    @property
    def receiving_device_type_class_name(self):
        """Gets the receiving_device_type_class_name of this CucmCdrJson.  # noqa: E501


        :return: The receiving_device_type_class_name of this CucmCdrJson.  # noqa: E501
        :rtype: str
        """
        return self._receiving_device_type_class_name

    @receiving_device_type_class_name.setter
    def receiving_device_type_class_name(self, receiving_device_type_class_name):
        """Sets the receiving_device_type_class_name of this CucmCdrJson.


        :param receiving_device_type_class_name: The receiving_device_type_class_name of this CucmCdrJson.  # noqa: E501
        :type: str
        """

        self._receiving_device_type_class_name = receiving_device_type_class_name

    @property
    def receiving_device_pool(self):
        """Gets the receiving_device_pool of this CucmCdrJson.  # noqa: E501


        :return: The receiving_device_pool of this CucmCdrJson.  # noqa: E501
        :rtype: str
        """
        return self._receiving_device_pool

    @receiving_device_pool.setter
    def receiving_device_pool(self, receiving_device_pool):
        """Sets the receiving_device_pool of this CucmCdrJson.


        :param receiving_device_pool: The receiving_device_pool of this CucmCdrJson.  # noqa: E501
        :type: str
        """

        self._receiving_device_pool = receiving_device_pool

    @property
    def duration(self):
        """Gets the duration of this CucmCdrJson.  # noqa: E501


        :return: The duration of this CucmCdrJson.  # noqa: E501
        :rtype: int
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this CucmCdrJson.


        :param duration: The duration of this CucmCdrJson.  # noqa: E501
        :type: int
        """

        self._duration = duration

    @property
    def date_time_disconnect(self):
        """Gets the date_time_disconnect of this CucmCdrJson.  # noqa: E501


        :return: The date_time_disconnect of this CucmCdrJson.  # noqa: E501
        :rtype: int
        """
        return self._date_time_disconnect

    @date_time_disconnect.setter
    def date_time_disconnect(self, date_time_disconnect):
        """Sets the date_time_disconnect of this CucmCdrJson.


        :param date_time_disconnect: The date_time_disconnect of this CucmCdrJson.  # noqa: E501
        :type: int
        """

        self._date_time_disconnect = date_time_disconnect

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CucmCdrJson, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CucmCdrJson):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
