# coding: utf-8

"""
    Helpdesk REST API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 6.8.0-SNAPSHOT
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six


class BulkFieldCopyRequestJson(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'int',
        'service_name': 'str',
        'field_name': 'str',
        'site_id': 'int'
    }

    attribute_map = {
        'id': 'id',
        'service_name': 'serviceName',
        'field_name': 'fieldName',
        'site_id': 'siteId'
    }

    def __init__(self, id=None, service_name=None, field_name=None, site_id=None):  # noqa: E501
        """BulkFieldCopyRequestJson - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._service_name = None
        self._field_name = None
        self._site_id = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if service_name is not None:
            self.service_name = service_name
        if field_name is not None:
            self.field_name = field_name
        if site_id is not None:
            self.site_id = site_id

    @property
    def id(self):
        """Gets the id of this BulkFieldCopyRequestJson.  # noqa: E501


        :return: The id of this BulkFieldCopyRequestJson.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this BulkFieldCopyRequestJson.


        :param id: The id of this BulkFieldCopyRequestJson.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def service_name(self):
        """Gets the service_name of this BulkFieldCopyRequestJson.  # noqa: E501


        :return: The service_name of this BulkFieldCopyRequestJson.  # noqa: E501
        :rtype: str
        """
        return self._service_name

    @service_name.setter
    def service_name(self, service_name):
        """Sets the service_name of this BulkFieldCopyRequestJson.


        :param service_name: The service_name of this BulkFieldCopyRequestJson.  # noqa: E501
        :type: str
        """

        self._service_name = service_name

    @property
    def field_name(self):
        """Gets the field_name of this BulkFieldCopyRequestJson.  # noqa: E501


        :return: The field_name of this BulkFieldCopyRequestJson.  # noqa: E501
        :rtype: str
        """
        return self._field_name

    @field_name.setter
    def field_name(self, field_name):
        """Sets the field_name of this BulkFieldCopyRequestJson.


        :param field_name: The field_name of this BulkFieldCopyRequestJson.  # noqa: E501
        :type: str
        """

        self._field_name = field_name

    @property
    def site_id(self):
        """Gets the site_id of this BulkFieldCopyRequestJson.  # noqa: E501


        :return: The site_id of this BulkFieldCopyRequestJson.  # noqa: E501
        :rtype: int
        """
        return self._site_id

    @site_id.setter
    def site_id(self, site_id):
        """Sets the site_id of this BulkFieldCopyRequestJson.


        :param site_id: The site_id of this BulkFieldCopyRequestJson.  # noqa: E501
        :type: int
        """

        self._site_id = site_id

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(BulkFieldCopyRequestJson, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, BulkFieldCopyRequestJson):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
